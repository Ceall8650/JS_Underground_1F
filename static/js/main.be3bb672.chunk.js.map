{"version":3,"sources":["components/Border.js","components/Brand.js","components/Chart.js","App.js","serviceWorker.js","index.js"],"names":["Root","styled","div","_templateObject","Cross","_templateObject2","Line","_templateObject3","Border","react_default","a","createElement","Component","Brand_templateObject","Content","Brand_templateObject2","Title","Brand_templateObject3","SubTitle","_templateObject4","Brand","Brand_Root","Border_Border","fulljustify","Chart_templateObject","Chart_templateObject2","Name","Chart_templateObject3","Formula","Chart_templateObject4","Chart","num","this","props","formula","i","push","concat","Chart_Root","calculator","App_templateObject","Footer","App_templateObject2","App","blocks","Brand_Brand","key","Chart_Chart","App_Root","createBlocks","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0pBAGA,IAAMA,EAAOC,IAAOC,IAAVC,KAOJC,EAAQH,IAAOC,IAAVG,KAGLC,EAAOL,IAAOC,IAAVK,KAMWC,mLAEjB,OACEC,EAAAC,EAAAC,cAACX,EAAD,KACES,EAAAC,EAAAC,cAACP,EAAD,UACAK,EAAAC,EAAAC,cAACL,EAAD,MACAG,EAAAC,EAAAC,cAACP,EAAD,kBAN4BQ,4sBCfpC,IAAMZ,EAAOC,IAAOC,IAAVW,KASJC,EAAUb,IAAOC,IAAVa,KAMPC,EAAQf,IAAOC,IAAVe,KAMLC,EAAWjB,IAAOC,IAAViB,KAKOC,mLAEjB,OACEX,EAAAC,EAAAC,cAACU,EAAD,KACEZ,EAAAC,EAAAC,cAACW,EAAD,MACAb,EAAAC,EAAAC,cAACG,EAAD,KACIL,EAAAC,EAAAC,cAACK,EAAD,uCACAP,EAAAC,EAAAC,cAACO,EAAD,8BAEJT,EAAAC,EAAAC,cAACW,EAAD,cAT2BV,0+BC1BnC,IAAMW,EAActB,IAAOC,IAAVsB,KASXxB,EAAOC,IAAOC,IAAVuB,KAcJC,EAAOzB,IAAOC,IAAVyB,KAUJC,EAAU3B,YAAOsB,EAAPtB,CAAH4B,KAOQC,uLAIjB,IAHU,IACHC,EAAOC,KAAKC,MAAZF,IACDG,EAAU,GACRC,EAAE,EAAEA,GAAG,EAAGA,IAChBD,EAAQE,KACN3B,EAAAC,EAAAC,cAACiB,EAAD,QAAAS,OAAaN,EAAb,OAAAM,OAAsBF,EAAtB,OAAAE,OAA6BN,EAAII,KAIrC,OAAOD,mCAGP,OACEzB,EAAAC,EAAAC,cAAC2B,EAAD,KACE7B,EAAAC,EAAAC,cAACe,EAAD,KAAOM,KAAKC,MAAMF,KACjBC,KAAKO,qBAhBqB3B,+eCvCnC,IAAMZ,EAAOC,IAAOC,IAAVsC,KAMJC,EAASxC,IAAOC,IAAVwC,KAmCGC,yLAlBX,IADA,IAAMC,EAAS,GACPT,EAAE,EAAGA,GAAG,EAAGA,IACR,IAANA,EAASS,EAAOR,KAAK3B,EAAAC,EAAAC,cAACkC,EAAD,CAAOC,IAAKX,KAC/BS,EAAOR,KAAK3B,EAAAC,EAAAC,cAACoC,EAAD,CAAOD,IAAKX,EAAGJ,IAAKI,KAEvC,OAAOS,mCAGP,OACEnC,EAAAC,EAAAC,cAACqC,EAAD,KACIhB,KAAKiB,eACPxC,EAAAC,EAAAC,cAAC8B,EAAD,oEAbU7B,aCbEsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.be3bb672.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Root = styled.div`\r\n    width: 100%;\r\n    height: 28px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`\r\nconst Cross = styled.div`\r\n    width: 14px;\r\n`\r\nconst Line = styled.div`\r\n    width: 280px;\r\n    height: 1px;\r\n    background-color: #2EB738;\r\n`\r\n\r\nexport default class Border extends Component {\r\n  render() {\r\n    return (\r\n      <Root>\r\n        <Cross>x</Cross>\r\n        <Line></Line>\r\n        <Cross>x</Cross>\r\n      </Root>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\nimport Border from './Border';\r\n\r\nconst Root = styled.div`\r\n    width: 350px;\r\n    height: 366px;\r\n    margin-bottom: 40px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n`\r\nconst Content = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n`\r\nconst Title = styled.div`\r\n    font-size: 56px;\r\n    text-align: justify;\r\n    font-family: PingFang;\r\n    font-weight: bold;\r\n`\r\nconst SubTitle = styled.div`\r\n    font-size: 24px;\r\n    text-align: justify;\r\n`\r\n\r\nexport default class Brand extends Component {\r\n  render() {\r\n    return (\r\n      <Root>\r\n        <Border />\r\n        <Content>\r\n            <Title>九九乘法表</Title>\r\n            <SubTitle>MULTIPLICATION CHART</SubTitle>\r\n        </Content>\r\n        <Border />\r\n      </Root>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst fulljustify = styled.div`\r\n  text-align: justify;\r\n  &:after{\r\n    content: \"\";\r\n    display: inline-block;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Root = styled.div`\r\n  width: 350px;\r\n  height: 366px;\r\n  display: inline-flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  margin-bottom: 40px;\r\n  padding: 64px 0px 64px 40px;\r\n  box-sizing: border-box;\r\n  background-color: #ffffff;\r\n  border-radius: 100px 0px 30px 0px;\r\n  box-shadow: 0px 3px 10px #D8D8D8;\r\n  justify-content: space-between;\r\n`\r\nconst Name = styled.div`\r\n  font-size: 118px;\r\n  font-weight: bold;\r\n  text-shadow: 4px 3px 0px #F0F0F0;\r\n  display: flex;\r\n  height: 118px;\r\n  align-items: flex-end;\r\n  justify-content: center;\r\n  padding-right: 20px;\r\n`\r\nconst Formula = styled(fulljustify)`\r\n  width: 110px;\r\n  height: 33px;\r\n  line-height: 33px;\r\n  font-size: 24px;\r\n`\r\n\r\nexport default class Chart extends Component {\r\n  calculator(){\r\n    const {num} = this.props;\r\n    const formula = []\r\n    for(let i=1;i<=9; i++){\r\n      formula.push(\r\n        <Formula>{`${num} x ${i} = ${num*i}`}</Formula>        \r\n      )\r\n    }\r\n\r\n    return formula\r\n  }\r\n  render() {\r\n    return (\r\n      <Root>\r\n        <Name>{this.props.num}</Name>\r\n        {this.calculator()}\r\n      </Root>\r\n    )\r\n  }\r\n}\r\n\r\nChart.propTypes = {\r\n    num: PropTypes.number,\r\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Brand from './components/Brand';\nimport Chart from './components/Chart'\n\nconst Root = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  color: #2EB738;\n`\nconst Footer = styled.div`\n  background: #2EB738;\n  color: #fff;\n  display: flex;\n  justify-content: flex-end;\n  height: 34px;\n  line-height: 34px;\n  position: absolute;\n  width: 100%;\n  bottom: 0px;\n  left: 0px;\n  padding-right: 85px;\n  box-sizing: border-box; \n`\nclass App extends Component {\n  createBlocks(){\n    const blocks = []\n    for(let i=1; i<=9; i++){\n      if(i === 1) blocks.push(<Brand key={i} />)\n      else blocks.push(<Chart key={i} num={i} />) \n    }\n    return blocks\n  }\n  render() {\n    return (\n      <Root>\n        { this.createBlocks() }\n        <Footer>\n          Copyright © 2019 HexSchool. All rights reserved.\n        </Footer>\n      </Root>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}